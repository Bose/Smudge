Title: Enter-Exit Function Lists

It would be good to be able to pass in a list of functions to call in
an enter/exit function context. Proposed syntax:

SM { STATE @foo, OtherSM:event, event, @baz [ event -(@quux)- ] }

While this syntax works for enter events, it is complicated by exit events,
which make it unclear which comma would delineate the exit functions and the
next state to be defined:

SM { STATE [ event -(@quux)- ] @foo, OtherSM:event, event, @baz,
     OTHER [ event -- ] }

I think that's still parseable, but it requires backtracking so how about this:

SM
{
    STATE (@foo, OtherSM:event, event, @baz)
    [
        event -(@quux)-
    ] (@exit1, @exit2)
}

In the single case, this could still fall back to an unparenthesized entry for simplicity:

SM { STATE @foo [event -(@quux)- ] @exit1 }

So, the grammar would be: [side-effect / side-effect-container]

In practice this isn't so simple.  Transient states allow for the pathological:

-- { -- -- [ -- -- ] --, * - --> -- }

Now, the parser would handle this correctly, but it is offensive, thus forbidden.
Instead, enter and exit events shall only allow the parenthesized syntax.
