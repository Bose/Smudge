;;;;;;;;;;;;
;; Parser ;;
;;;;;;;;;;;;

;; Module
smudgle = 1*state-machine-def

;; Machine
state-machine-def = state-machine-name state-machine
state-machine-name = identifier
state-machine = state-machine-begin state-machine-body state-machine-end
state-machine-body = state-def *(comma state-def) [comma]

;; State
state-def = [start-sigil] state-name (arrow / enter-exit state enter-exit)
state-name = identifier
enter-exit = [enter-exit-begin [side-effect-list] enter-exit-end]
state = state-begin state-body state-end
state-body = event-handler *(comma-sep event-handler) [comma]

;; Handler
event-handler = event-name (arrow / dash)
event-name = identifier

;; Transitions
dash  =   dash-empty / dash-begin [side-effect-list] dash-end
arrow = (arrow-empty / dash-begin [side-effect-list] arrow-end) state-name

;; Side effects
side-effect-list = side-effect *(comma side-effect) [comma]
side-effect = function-call / qualified-event
function-call = foreign-identifier
qualified-event = [state-machine-name dot] event-name
