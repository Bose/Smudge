;;;;;;;;;;;
;; Lexer ;;
;;;;;;;;;;;

;; Visible characters
visible = ascii-visible / unicode-visible

;; Whitespace
newline = ascii-nl / unicode-nl
space = ascii-space / unicode-space
whitespace = space / newline

;; Letters
alpha = ascii-alpha / unicode-alpha

;; Numbers
digit = ascii-digit / unicode-digit
number = digit / unicode-num

;; Comments
comment = "//" *(space / visible) newline
empty = *whitespace [comment empty]
spacesep = (whitespace / comment) empty
emptytoeol = [*space (comment / newline) emptytoeol]

;; C identifiers
ascii-nondigit = ascii-alpha / "_"
c-identifier = ascii-nondigit *(ascii-nondigit / ascii-digit)

;; Smudge identifiers
idchar = alpha / number / "-" / "_"
unquoted = 1*idchar
quoted = DQUOTE 1*(whitespace / visible) DQUOTE
identifier = (unquoted / quoted) empty
foreign-identifier = "@" c-identifier empty

;; Smudge pragmas
pragma = emptytoeol "#" command [1*space argument] *space newline
command = unquoted
argument = 1*visible *[1*space 1*visible]

;; Smudge symbols
start-sigil = "*" empty
comma = "," empty
dot = "." empty
state-machine-begin = "{" empty
state-machine-end   = "}" empty
state-begin = "[" empty
state-end   = "]" empty
dash-empty = spacesep "--" empty
arrow-empty = spacesep "-->" empty
become-empty = spacesep "~~>" empty
dash-begin = spacesep "-("
dash-end = ")-" empty
arrow-end = ")->" empty
become-begin = spacesep "~("
become-end = ")~>" empty
enter-exit-begin = "(" empty
enter-exit-end   = ")" empty

;; Smudge lexing
token = identifier / foreign-identifier / start-sigil / comma / dot
      / state-machine-begin / state-machine-end / state-begin / state-end
      / dash-empty / arrow-empty / dash-begin / dash-end / arrow-end
      / enter-exit-begin / enter-exit-end
smudge-file = *pragma empty *token
