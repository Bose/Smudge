module = state-machine empty *(state-machine empty)
state-machine = state-machine-name empty state-machine-spec empty
state-machine-spec = "{" empty state-list empty "}"
state-list = state *(empty "," empty state)
state = state-title empty (to-state / enter-function empty event-handler-spec empty exit-function)
event-handler-spec = "[" empty event-handler-list empty "]"
event-handler-list = event-handler *(empty "," empty event-handler)
enter-function = [function-call]
exit-function = [function-call]
side-effect-container = "(" empty [side-effect-list] empty ")"
event-handler = (event-name / any) empty (to-state / (dash empty))
to-state = arrow empty state-name
dash = "-" [side-effect-container] "-"
arrow = "-" [side-effect-container] "-" ">"
side-effect-list = side-effect *(empty "," empty side-effect)
side-effect = function-call / typed-function-call / qualified-event
typed-function-call = function-call empty ":" empty qualified-event
qualified-event = [state-machine-name "."] event-name
function-call = "@" c-identifier
state-title = state-name / any / "*" state-name
state-machine-name = identifier
state-name = identifier
event-name = identifier
any = "_"
comment = "/" "/" *non-newline eol
identifier = 1*(ALPHA / DIGIT / "-") / 2*(ALPHA / DIGIT / sep) / quoted
c-identifier = nondigit *(nondigit / DIGIT)
sep = "-" / "_"
symbol = "!" / "#" / "$" / "%" / "&" / "'" / "(" / ")" / "*" / "+" / "," / "." / "/" / "{" / "|" / "}" / "~" / "[" / "\" / "]" / "^" / "`" / "<" / ">" / ";"
eol = LF
lwsp = *(WSP / eol)
empty = comment / lwsp
space = (WSP / eol / comment) empty
nondigit = ALPHA / "_"
non-newline = ALPHA / WSP / DIGIT / sep / symbol
quoted = DQUOTE 1*(ALPHA / WSP / DIGIT / sep / symbol) DQUOTE

;ALPHA = %x41-5A / %x61-7A
;DIGIT = %x30-39
;DQUOTE = %x22
;SP = %x20
;HTAB = %x09
;WSP = SP / HTAB
;CR = %x0D
;LF = %x0A
